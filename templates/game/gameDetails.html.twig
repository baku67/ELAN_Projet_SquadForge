{% extends 'base.html.twig' %}

{% block title %}Tous les jeux{% endblock %}

{% block body %}

    <header class="gameHeader" style="background: url('{{ asset('img/games/banner/' ~ game.banner ) }}' )">
        <a href="{{ path('app_home') }}"><img src="{{ asset('img/games/headerSiteLogo/' ~ game.siteLogo) }}" class="logoPng" id="logoPng" /></a>
        <nav class="navLine">
            <a href="{{ path('app_games') }}" style="color:{{ game.fontColor }};">Jeux</a>
            {% if app.user %}
                <a href="{{ path('app_userGroups') }}" style="color:{{ game.fontColor }};">TEAMS</a>
                <a href="{{ path('app_showNotifsList') }}">
                    <div style="position:relative; margin-right:10px;">
                        <i class="fa-solid fa-bell notifBell"></i>
                        {# Bulle newNotifCount si > 0#}
                        {% if userNotifCount > 0 %}
                            <span class="newNotifBubbleCount" id="newNotifBubbleCount">{{ userNotifCount }}</span>
                        {% endif %}
                    </div>
                </a>            
            {% endif %}
            {% if app.user and "ROLE_MODO" in app.user.roles %}
                <a href="{{ path('app_moderationDashboard') }}" style="color:{{ game.fontColor }};">
                    <div style="position:relative; margin-right:10px;">
                        <span>Modération</span>
                        {% if modoNotifCount > 0 %}
                            <span class="newNotifBubbleCount">{{ modoNotifCount }}</span>
                        {% endif %}
                    </div>
                </a>
            {% endif %}
        </nav>
        <a href="{{ path('app_game', {'id': game.id }) }}"><h2 class="headerGameTitle" style="border-right:15px solid {{ game.color }};">{{ game.title }}</h2></a>
    </header>
    <div class="headerUnderline" style="background-color: {{ game.color }}"></div>


    {# Fil d'ariane "breadcrumb" #}
    <ul class="filAriane">
        <li class="arianeLink"><a href="{{ path('app_games') }}">Jeux</a></li>
        <span class="filArianeSepa"> - </span>
        <li class="arianeOnPage">{{ game.title }}</li>
    </ul>


    <div class="main">

        {# Test Image Background BRUT #}
        <div class="gameHeaderInfos gameSubImgBg" style="background-image: radial-gradient(circle, rgba(255,255,255,0) 0%, rgba(35,35,35,0.995) 69%), url('{{asset("img/games/headerBackground/" ~ game.subBanner)}}'); border-top: 2px solid {{ game.color }};">

            <div class="gameTitle" style="position:absolute; color:white;">
                <h2 style="text-shadow: -1px -1px 0 {{ game.color }}, 1px -1px 0 {{ game.color }}, -1px 1px 0 {{ game.color }}, 1px 1px 0 {{ game.color }};">{{ game.title }}</h2>
            </div>


            {# Infos du jeu et Btn Favoris #}
            <div class="marginBottom" style="display:inline-flex; width:100%; justify-content:space-between;">

                <div>
                    <div class="gameInfosHeaderTitle" style="background-color:{{ game.color }};"></div>
                    <h3 class="gameSubTitle noMarginBottom">Infos</h3>
                </div>

                {# Bouton Favoris state (Btn toggle Async) #}
                {% if app.user %}
                    {% if isFavorited %}
                        <span id="favGameBtn" class="favButton" style="border-top: 1px solid {{ game.color }}; border-bottom: 1px solid {{ game.color }};"><i style="color:{{ game.color }};" class="fa-solid fa-heart favIcon"></i></span>
                    {% else %}
                        <span id="favGameBtn" class="favButton"><i class="fa-regular fa-heart favIcon"></i></span>
                    {% endif %}
                {% else %}
                        <span id="favGameBtn" class="favButton"><i class="fa-regular fa-heart favIcon"></i></span>
                {% endif %}

            </div>

            <div style="padding:25px;">

                {# GameId et GameColor pour fav asynch (plutot que dans controller ?) #}
                <span id="gameId" style="display:none;">{{ game.id }}</span>
                <span id="gameColor" style="display:none;">{{ game.color }}</span>

                {# Infos #}
                <div style="font-family:'K2D', sans-serif;">
                    <p>Éditeur: {{ game.editor }}</p>
                    <p>{{ game.publishDate|date('Y') }}</p>
                    <p>Genre: <a class="underlineLink" href="{{ path('app_genreGames', {'id': game.genre.id }) }}">{{ gameGenre }}</a></p>
                </div>

                {# Form Notation (Ajax) #}
                <div class="gameNotationDiv">
                    <div class="rate">
                        <input type="radio" id="star5" name="rate" value="5"/>
                        <label class="starLabel" for="star5" title="text">5 stars</label>
                        <input type="radio" id="star4" name="rate" value="4" />
                        <label class="starLabel" for="star4" title="text">4 stars</label>
                        <input type="radio" id="star3" name="rate" value="3" />
                        <label class="starLabel" for="star3" title="text">3 stars</label>
                        <input type="radio" id="star2" name="rate" value="2" />
                        <label class="starLabel" for="star2" title="text">2 stars</label>
                        <input type="radio" id="star1" name="rate" value="1" />
                        <label class="starLabel" for="star1" title="text">1 star</label>
                    </div>
                    {% if nbrOfNotations > 1 %}
                        <p class="gameNotationLine">Moy: <span id="gameRatingMoyValue">{{ averageRating }}</span>/5  (<span id="gameRatingNbrValue">{{ nbrOfNotations }}</span> votes)</p>
                    {% else %}
                        <p class="gameNotationLine">Moy: <span id="gameRatingMoyValue">{{ averageRating }}</span>/5  (<span id="gameRatingNbrValue">{{ nbrOfNotations }}</span> vote)</p>
                    {% endif %}
                </div>

            </div>

        </div>


        {# Notation Game async #}
        <script>

            {% if userGameNotation %}
                const notationValue = {{ userGameNotation.note }};
                if (notationValue !== null) {
                    document.getElementById("star" + notationValue).checked = true;
                }
            {% endif %}

            const rate = document.querySelectorAll('.rate input');

            rate.forEach((radio) => {
            radio.addEventListener('click', (event) => {

                console.log("test");

                {% if app.user %}

                    const rating = event.target.value;
                    const id = {{ game.id }};
                    fetch('/updateNotation/' + id + '/' + rating, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                    })
                    .then(response => response.json())
                    .then(data => {
                    if (data.success) {
                        if (data.eraseNote) {
                            document.querySelector('#ajaxFlash').textContent = "Votre note a bien été effacé";
                            // Problème si re-set une note apres annulation (pas doré): .style prioritaire
                            document.querySelectorAll('.rate > input:checked ~ label').forEach((label) => {
                                // label.style.color = "#ccc";
                                label.classList.add('greyed');
                            })
                        }
                        else {
                            // for (let i = 0; i < rating; i++) {
                            //     document.getElementById('star'+i).style.color = "#ffc700"; 
                            // }
                            document.querySelector('#ajaxFlash').textContent = "Votre note a bien été pris en compte";
                        }
                        document.getElementById('gameRatingMoyValue').innerHTML = data.newAverageNote;
                        document.getElementById('gameRatingNbrValue').innerHTML = data.newVoteCount;
                        document.querySelector('#ajaxFlash').classList.add("ajaxFlashAnim", "successAjaxFlash");
                    } else {
                        document.querySelector('#ajaxFlash').textContent = "Il y a eu un problème lors de l'envoi de votre note";
                        document.querySelector('#ajaxFlash').classList.add("ajaxFlashAnim", "errorAjaxFlash");
                    }
                    
                    setTimeout(() => {
                        document.querySelector('#ajaxFlash').className = ""; 
                    }, 3500);
                    })
                    .catch(error => {
                    alert('Erreur lors de la communication avec le serveur : ' + error.message);
                    });

                {% else %} 
                    document.querySelector('#ajaxFlash').textContent = "Vous devez être connecté pour pouvoir noter un jeu";
                    document.querySelector('#ajaxFlash').classList = "";
                    document.querySelector('#ajaxFlash').classList.add("ajaxFlashAnim", "errorAjaxFlash");
                {% endif %}
            });
            });

        </script>





        {# Section Groupe #}
        <div class="sectionContainer" style="border: 1px solid {{ game.color }}50; border-top:2px solid {{ game.color }}; border-left:1px solid {{ game.color }};">
            <div>
                <div class="gameTopicsSubTitleBg" style="background-color:{{ game.color }};"></div>
                <h3 class="gameSubTitle noMarginBottom">Teams</h3>
            </div>

            <div class="sectionContent">

                <div style="display:inline-flex; width:100%; justify-content:center;">
                    <a href="{{ path('app_groupList', {'gameIdFrom': game.id}) }}">
                        <div class="gameTeamBtn gameTeamBtn1" onmouseover="this.style.backgroundColor = '{{ game.color }}';" onmouseout="this.style.backgroundColor = 'rgb(69 69 69)';">
                            <div class="teamBtnBg" style="background-color: {{ game.color }}"></div>
                            <span style="position:relative; z-index:10;">Rejoindre une Team ({{ nbrOfTeams }})</span>
                        </div>
                    </a>
                    {% if app.user %}
                    <a href="{{ path('app_createGroup', {'gameIdFrom': game.id}) }}">
                        <div class="gameTeamBtn gameTeamBtn2" onmouseover="this.style.backgroundColor = '{{ game.color }}';" onmouseout="this.style.backgroundColor = 'rgb(69 69 69)';">
                            <div class="teamBtnBg" style="background-color: {{ game.color }}"></div>
                            <span style="position:relative; z-index:10;">Créer une Team</span>
                        </div>
                    </a>
                    {% else %}
                    <a href="{{ path('app_login') }}">
                        <div class="gameTeamBtn gameTeamBtn2" onmouseover="this.style.backgroundColor = '{{ game.color }}';" onmouseout="this.style.backgroundColor = 'rgb(69 69 69)';">
                            <div class="teamBtnBg" style="background-color: {{ game.color }}"></div>
                            <span style="position:relative; z-index:10;">Créer une Team</span>
                        </div>
                    </a>
                    {% endif %}
                </div>


                {% if app.user %}
                
                    <h4 style="text-align:center;margin-top:20px">Vos Teams</h4>

                    {% if userGameGroups|length > 0 %}
                    <div class="groupListGrid">
                        {% for userGameGroup in userGameGroups %}
                            
                                <a class="groupCard" href="{{ path('app_groupDetails', {'groupId': userGameGroup.id } ) }}" style="border: 1px solid {{ game.color }}">
                                    <div>
                                        <h5 style="background-color: {{ game.color }}; padding: 3px 10px 7px 10px;">
                                            {{ userGameGroup.title }} 
                                            {# Icon Leader #}
                                            {% if userGameGroup.leader == app.user %}<i class="fa-solid fa-crown" style="color:#ffe039;"></i>{% endif %}
                                        </h5>
                                    
                                        <span>{{ userGameGroup.members|length }} / {{ userGameGroup.nbrPlaces }}</span>
                                    </div>
                                </a>

                        {% endfor %}
                    </div>
                    {% else %}
                    <p class="emptyListMsg">Vous n'appartenez à aucune team</p>
                    {% endif %}

                {% else %}

                    <p class="emptyListMsg" style="margin-top:35px;">
                        <a style="text-decoration:underline;" href="{{ path('app_login') }}">Connectez-vous</a> pour accéder à vos teams
                    </p>

                {% endif %}
            
            </div>
            
        </div> 




        {# Ligne "Topics" + Bouton "+Créer" #}
        <div class="sectionContainer" style="border: 1px solid {{ game.color }}50; border-top:2px solid {{ game.color }}; border-left:1px solid {{ game.color }};">
        
            <div style="display:inline-flex; width:100%; justify-content:space-between;">
                <a href="{{ path('app_allTopics', {'gameIdFrom': game.id}) }}">
                    <div>
                        <div class="gameTopicsSubTitleBg" style="background-color:{{ game.color }};"></div>
                        <h3 class="gameSubTitle noMarginBottom">
                            Topics
                            <span class="gameListCount">&nbsp;({{ gameTopicsCount }})</span>
                        </h3>
                    </div>
                </a>  
                {# <a id="createTopicBtn" href="{{ path('app_addGameTopic', {'id': game.id }) }}" class="createButton" style="border-top: 1px solid {{ game.color }}; border-bottom: 1px solid {{ game.color }};"><i class="fa-solid fa-plus" style="color:{{ game.color }}"></i>&nbsp;Créer</a> #}
                
                {% if app.user %}
                    <span id="createTopicBtn" class="createButton" style="border-top: 1px solid {{ game.color }}; border-bottom: 2px solid {{ game.color }};" onmouseover="this.style.backgroundColor = '{{ game.color }}';" onmouseout="this.style.backgroundColor = 'rgb(69 69 69)';"><i class="fa-solid fa-plus" style="color:{{ game.color }}"></i>&nbsp;Créer</span>
                {% else %}
                    <a href="{{ path('app_login') }}" class="linkFixPosition"><span class="createButton" style="border-top: 1px solid {{ game.color }}; border-bottom: 2px solid {{ game.color }};" onmouseover="this.style.backgroundColor = '{{ game.color }}';" onmouseout="this.style.backgroundColor = 'rgb(69 69 69)';"><i class="fa-solid fa-plus" style="color:{{ game.color }}"></i>&nbsp;Créer</span></a>
                {% endif %}
                
            </div>


            <div class="sectionContent">
                {# Form d'ajout caché Topic, proc JS bouton #}
                <div id="createTopicForm" class="notDisplayed"> 

                    {{ form_start(formAddTopic) }}

                        <div class="my-custom-class-for-errors">
                            {{ form_errors(formAddTopic) }}
                        </div>

                        <div style="position:relative; margin: 5px auto;">
                            <div class="labelSpan" style="width:100%; display:inline-flex; align-items: center;">
                                {{ form_label(formAddTopic.title, 'Titre')}}
                                <p id="charCountMsg" style="color:red;"> (au moins 5 mots)</p>
                                <span id="vulgarityTopicWarning" style="color:red; font-size:0.72em; display:none; font-family:'K2D',sans-serif;">
                                    <i class="fa-solid fa-triangle-exclamation"></i>
                                    &nbsp;Vulgarité
                                </span>
                            </div>
                            {{ form_widget(formAddTopic.title) }} 
                        </div>

                        <div style="position:relative; margin: 5px auto;">
                            <span class="labelSpan" style="width:100%;">{{ form_label(formAddTopic.firstMsg, 'Introduction')}}</span>
                            {{ form_widget(formAddTopic.firstMsg) }} 
                        </div>

                        <span class="submitButton" style="margin: 15px auto;">{{ form_widget(formAddTopic.submit, { 'label': 'Publier' }) }}</span>

                        {# A voir: CSRF protection #}
                        {{ form_widget(formAddTopic._token) }}
                    {{ form_end(formAddTopic) }}
                    
                </div>



                {# Script vérif Topic Front 5 mots minimum #}
                <script>
                    document.getElementById('topic_submit').disabled = true;

                    let charContMsg = document.querySelector("#charCountMsg");
                    let textInput = document.querySelector('#topic_title');

                    textInput.addEventListener("input", function() {

                        console.log("inputText" + textInput.value);

                        let text = textInput.value;
                        const words = text.split(" ");
                        const wordCount = words.length;

                        if(wordCount <= 5) {
                            charContMsg.style.color = "red";
                            document.getElementById('topic_submit').disabled = true;

                        }
                        else {
                            charContMsg.style.color = "#00be00";
                            document.getElementById('topic_submit').disabled = false;

                        }

                    })
                </script>

                {# Liste des Topics #}
                <div class="listContainer topicList marginTop">

                    {% for topic in gameTopics %}
                        <a href="{{ path('app_topicDetail', {'id': topic.id}) }}">
                            {# Faire une div BG absolute pour chaque card avec clipPath anim onmouseover #}
                            <div class="topicCard" style="border-bottom: 4px solid {{ game.color }}" onmouseover="" onmouseout="">
                                <img class="tinyLogo" src="{{ asset('img/games/tinyLogo/' ~ topic.game.tinyLogo) }}" />
                                <span class="topicTitle">{{ topic.title|capitalize }}</span>
                                <div class="topicCardSubInfos">
                                    <span>{{ topic.status }}</span>
                                    <span class="topicCardAuthor">{{ topic.user.pseudo }}</span>
                                    <span class="topicCardPublishDate">{{ time_diff(topic.publishDate) }}</span>
                                    {% if topic.topicPostsCount == 0 %}
                                        <span style="opacity:0.5;">{{ topic.topicPostsCount }} <i class="fa-solid fa-message" style="color:grey;"></i></span>
                                    {% else %}
                                        <span>{{ topic.topicPostsCount }} <i class="fa-solid fa-message" style="color:{{ topic.game.color }}"></i></span>
                                    {% endif %}
                                </div>
                            </div>
                        </a>
                    {% endfor %}

                    <span class="seeAllRedirect">
                        <a href="{{ path('app_allTopics', {'gameIdFrom': game.id}) }}">Tout voir  <i class="fa-solid fa-chevron-right"></i></a>
                    </span>

                </div>

            </div>

        </div>


        <br><br>



        {# Section Média #}
        <div class="sectionContainer" style="border: 1px solid {{ game.color }}50; border-top:2px solid {{ game.color }}; border-left:1px solid {{ game.color }};">
        
            <div style="display:inline-flex; width:100%; justify-content:space-between;">
                
                <a href=" {{ path('app_allMedias', {'gameIdFrom': game.id}) }}">
                    <div>
                        <div class="gameTopicsSubTitleBg" style="background-color:{{ game.color }};"></div>
                        <h3 class="gameSubTitle noMarginBottom">
                            Medias
                            <span class="gameListCount">&nbsp;({{ gameMediasCount }})</span>
                        </h3>
                    </div>
                </a>
                    
                {# <a id="createTopicBtn" href="{{ path('app_addGameTopic', {'id': game.id }) }}" class="createButton" style="border-top: 1px solid {{ game.color }}; border-bottom: 1px solid {{ game.color }};"><i class="fa-solid fa-plus" style="color:{{ game.color }}"></i>&nbsp;Créer</a> #}
                
                {% if app.user %}
                    <span id="createMediaBtn" class="createButton" style="border-top: 1px solid {{ game.color }}; border-bottom: 2px solid {{ game.color }};" onmouseover="this.style.backgroundColor = '{{ game.color }}';" onmouseout="this.style.backgroundColor = 'rgb(69 69 69)';"><i class="fa-solid fa-plus" style="color:{{ game.color }}"></i>&nbsp;Créer</span>
                {% else %}
                    <a href="{{ path('app_login') }}" class="linkFixPosition"><span class="createButton" style="border-top: 1px solid {{ game.color }}; border-bottom: 2px solid {{ game.color }};" onmouseover="this.style.backgroundColor = '{{ game.color }}';" onmouseout="this.style.backgroundColor = 'rgb(69 69 69)';"><i class="fa-solid fa-plus" style="color:{{ game.color }}"></i>&nbsp;Créer</span></a>
                {% endif %}
            </div>


            <div class="sectionContent">

                {# Form d'ajout caché Media, proc JS bouton #}
                <div id="createMediaForm" class="notDisplayed"> 

                    {{ form_start(formAddMedia) }}

                        <div class="my-custom-class-for-errors">
                            {{ form_errors(formAddMedia) }}
                        </div>

                        <div style="position:relative; margin: 5px auto;">
                            <div class="labelSpan" style="width:100%; display:inline-flex; align-items: center;">
                                {{ form_label(formAddMedia.title, 'Titre')}}
                                <p id="charCountMsgMedia" style="color:red;"> (au moins 5 mots)</p>
                                <span id="vulgarityMediaWarning" style="color:red; font-size:0.72em; display:none; font-family:'K2D',sans-serif;">
                                    <i class="fa-solid fa-triangle-exclamation"></i>
                                    &nbsp;Vulgarité
                                </span>
                            </div>
                            {{ form_widget(formAddMedia.title) }} 
                        </div>

                        <div style="position:relative; margin: 5px auto;">
                            <span class="labelSpan" style="width:100%;">{{ form_label(formAddMedia.url, 'Choisissez un fichier')}}<span class="fileUploadCriteria"><span id="extensionCriteria">(.png .jpg .gif .jpeg)</span> <span id="fileCriteria">(10MB)</span></span></span>
                            {{ form_widget(formAddMedia.url) }} 
                        </div>

                        <span class="submitButton" style="margin: 15px auto;">{{ form_widget(formAddMedia.submit, { 'label': 'Publier' }) }}</span>

                        {{ form_widget(formAddMedia._token) }}
                    {{ form_end(formAddMedia) }}


                    <div class="mediaCardPreview">
                        <div id="preview-container">
                                    <div id="mediaCardHeader">
                                        <span class="mediaTitle"></span>
                        
                                    </div>

                        </div>
                    </div>
                    



                </div>


                {# Script aperçu media upload #}
                <script>
                    // Sélectionnez votre élément d'entrée de type fichier (input file)
                    const input = document.getElementById('media_url');

                    // Ajoutez un écouteur d'événements "change" sur l'élément d'entrée
                    input.addEventListener('change', (e) => {
                        // Obtenez le fichier sélectionné
                        const file = e.target.files[0];

                        if (file) {
                            // Créez un objet FileReader
                            const reader = new FileReader();

                            // Définissez l'événement onload du FileReader
                            reader.onload = (e) => {
                                // Créez une balise d'image pour afficher la prévisualisation
                                const img = document.createElement('img');
                                img.src = e.target.result;

                                // Ajoutez l'image prévisualisée à un élément de votre choix dans le DOM
                                const previewContainer = document.getElementById('mediaCardHeader');
                                previewContainer.innerHTML = '';
                                previewContainer.prepend(img);
                            };

                            // Lisez le contenu du fichier en tant que données URL
                            reader.readAsDataURL(file);
                        }
                    });

                </script>




                <div class="masonry-grid">

                    {% for media in gameMedias %}

                        <div class="grid-item" style="height:fit-content;">

                            {% if app.user and app.user.autoPlayGifs %}
                            <a href="{{ path('app_mediaDetail', {'id': media.id}) }}">
                            {% endif %}
                                
                                <div class="mediaCard">

                                    {% if app.user and not app.user.autoPlayGifs %}
                                    <a href="{{ path('app_mediaDetail', {'id': media.id}) }}">
                                    {% elseif app.user is null %}
                                    <a href="{{ path('app_mediaDetail', {'id': media.id}) }}">
                                    {% endif %}
                                    <div class="mediaCardHeader" style="border-bottom: 5px solid {{ game.color }}">
                                        <img class="tinyLogo" src="{{ asset('img/games/tinyLogo/' ~ media.game.tinyLogo) }}" />
                                        <span class="mediaTitle">{{ media.title|capitalize }}</span>
                                        {# <span>{{ media.status }}</span>
                                        <span>{{ media.user.pseudo }}</span> #}
                                        <span class="topicCardPublishDate">{{ time_diff(media.publishDate) }}</span>
                                    </div>
                                    {% if app.user and not app.user.autoPlayGifs %}
                                    </a>
                                    {% endif %}

                                    {# Gif autoplay=false si paramètre user #}
                                    {% if app.user %}
                                        {% if not app.user.autoPlayGifs %}
                                            <img data-gifffer="{{ asset("img/uploads/" ~ media.url) }}" data-gifffer-alt="media" class="mediaImg" />
                                        {% else %}
                                            <img src="{{ asset("img/uploads/" ~ media.url) }}" alt="media" class="mediaImg" />
                                        {% endif %}
                                    {% else %}
                                        <img src="{{ asset("img/uploads/" ~ media.url) }}" alt="media" class="mediaImg" />
                                    {% endif %}
                                    
                                </div>

                            {% if app.user and app.user.autoPlayGifs %}
                            </a>
                            {% endif %}


                            {# Upvote/downvote média + score + nbrPosts #}
                            <div class="mediaCardStatsDiv">

                                {# Pas opti: bloucle sur tous les likes du post pour savoir si liké (boucle dans boucle) #}
                                {% set liked = "" %}
                                {% if app.user %}
                                    {% for upvote in media.UserUpvote %}
                                        {% if upvote == app.user %}
                                            {% set liked = "upBtnLiked" %}
                                        {% endif %}
                                    {% endfor %}
                                {% endif %}


                                <div class="inline">
                                    <i mediaId={{ media.id }} class="likeMedia fa-regular fa-circle-up {{ liked }}"></i>
                                    <span id="countLikesMedia{{ media.id }}" value="{{ media.upvoteCount }}"> {{ media.upvoteCount }} </span>
                                </div>
                            
                                {% if media.mediaPostsCount == 0 %}
                                    <a href="{{ path('app_mediaDetail', {'id':media.id}) }}">
                                        <span style="opacity:0.5;">
                                            {{ media.mediaPostsCount }} 
                                            <i class="fa-solid fa-message" style="color:grey;"></i>
                                        </span>
                                    </a>
                                {% else %}
                                    <a href="{{ path('app_mediaDetail', {'id':media.id}) }}">
                                        <span>
                                            {{ media.mediaPostsCount }} 
                                            <i class="fa-solid fa-message" style="color:var(--primary-color)"></i>
                                        </span>
                                    </a>
                                {% endif %}

                            </div>

                        </div>

                    {% endfor %}

                </div>


                <span class="seeAllRedirect">
                    <a href="{{ path('app_allMedias', {'gameIdFrom': game.id}) }}">Tout voir  <i class="fa-solid fa-chevron-right"></i></a>
                </span>


                {# Masonry JS Medias (permet de rendre responsive entre autre) #}
                <script src="https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.min.js"></script>
                {# imagesLoaded JS #}
                <script src="https://unpkg.com/imagesloaded@5/imagesloaded.pkgd.min.js"></script>

                <script>

                    $(document).ready(function() {
                        var $gridItems = $('.grid-item');
                        
                        $gridItems.imagesLoaded(function() {
                            setTimeout(function() {
                                console.log('imagesLoaded');
                                $('.masonry-grid').masonry({
                                    itemSelector: '.grid-item',
                                    columnWidth: '.grid-item',
                                    gutter: 15, // Adjust the gutter size as needed
                                });
                            }, 500) 
                        });
                    });
                    
                </script>

            </div>

        </div>
        




        {# Script vérif fileExtension et fileSize #}
        <script>

            var textCriteria = false;
            var fileExtCriteria = false;
            var fileSizeCriteria = false;

            let fileInput = document.getElementById('media_url');
            fileInput.addEventListener('change', function(event) {
                var uploadedFile = event.target.files[0];
                const maxFileSize = 10 * 1024 * 1024; // 10 MB 

                if (uploadedFile && uploadedFile.size > maxFileSize) {
                    // event.target.value = ''; // On supprimer le fichier de l'input
                    document.getElementById('fileCriteria').style.color = 'red';
                    document.getElementById('fileCriteria').innerHTML = "( > 10 MB <i class='fa-solid fa-triangle-exclamation'></i> )";
                    fileSizeCriteria = false;
                }
                else {
                    document.getElementById('fileCriteria').style.color = '#00c600';
                    document.getElementById('fileCriteria').innerHTML = "( 10 MB <i class='fa-solid fa-check'></i> )";
                    fileSizeCriteria = true;
                }

                uploadedFileExt = getFileExtension(uploadedFile.name);

                const allowedExtensions = ['png', 'jpg', 'jpeg', 'gif'];

                if (allowedExtensions.includes(uploadedFileExt.toLowerCase())) {
                    document.getElementById('extensionCriteria').style.color = '#00c600';
                    document.getElementById('extensionCriteria').innerHTML = "( .png .jpg .gif .jpeg <i class='fa-solid fa-check'></i> )";
                    fileExtCriteria = true;
                }
                else {
                    document.getElementById('extensionCriteria').style.color = 'red';
                    document.getElementById('extensionCriteria').innerHTML = "( .png .jpg .gif .jpeg <i class='fa-solid fa-triangle-exclamation'></i> )";
                    fileExtCriteria = false;        
                }
            });

            function getFileExtension(filename) {
                return filename.split('.').pop();
            }


            {# Script vérif Front 5 mots minimum #}

            let charContMsg2 = document.querySelector("#charCountMsgMedia");
            let textInput2 = document.querySelector('#media_title');

            textInput2.addEventListener("input", function() {

                let text = textInput2.value;
                const words = text.split(" ");
                const wordCount = words.length;

                if(wordCount <= 5) {
                    charContMsg2.style.color = "red";
                    textCriteria = false;
                }
                else {
                    charContMsg2.style.color = "#00be00";
                    textCriteria = true;
                }
            })


            // disable du bouton submit si les critères ne sont pas remplis
            document.getElementById('media_submit').disabled = true;

            textInput2.addEventListener("input", function() {
                if (textCriteria && fileExtCriteria && fileSizeCriteria) {
                    document.getElementById('media_submit').disabled = false;
                }
                else {
                    document.getElementById('media_submit').disabled = true;
                }
            });
            fileInput.addEventListener("change", function() {
                if (textCriteria && fileExtCriteria && fileSizeCriteria) {
                    document.getElementById('media_submit').disabled = false;
                }
                else {
                    document.getElementById('media_submit').disabled = true;
                }
            });
        </script>



        {# (JS) Show/Hide form addTopic/addMedia Btn #}
        <script>
                document.querySelector('#createTopicBtn').addEventListener('click', function() {
                    document.querySelector('#createTopicForm').classList.toggle("notDisplayed");
                    if (document.getElementById('createTopicForm').classList.contains("notDisplayed")) {
                        document.querySelector('#createTopicBtn').innerHTML = '<i class="fa-solid fa-plus" style="color:{{ game.color }}"></i>&nbsp;Créer';
                    }
                    else {
                        document.querySelector('#createTopicBtn').innerHTML = '<i class="fa-solid fa-minus" style="color:{{ game.color }}"></i>&nbsp;Annuler';
                    }
                });

                document.querySelector('#createMediaBtn').addEventListener('click', function() {
                    console.log("test");
                    document.querySelector('#createMediaForm').classList.toggle("notDisplayed");
                    if (document.getElementById('createMediaForm').classList.contains("notDisplayed")) {
                        document.querySelector('#createMediaBtn').innerHTML = '<i class="fa-solid fa-plus" style="color:{{ game.color }}"></i>&nbsp;Poster';
                    }
                    else {
                        document.querySelector('#createMediaBtn').innerHTML = '<i class="fa-solid fa-minus" style="color:{{ game.color }}"></i>&nbsp;Annuler';
                    }
                });

        </script>




        {# Script de Warning titres Topic/Media Front (bloqué submit) #} 
        {# On censure pas mais proc warning (à fix) #}
        <script>

            // Traduction Collection Censure en arrayJS des mots
            let censuresArray = [];
            {% for censure in censures %}
                censuresArray.push("{{ censure.word }}");
            {% endfor %}
            console.log(censuresArray);

            // A chaque input, check si il y a vulgarité et censorise
            document.getElementById('topic_title').addEventListener('input', function() {
            
                // Découpe de l'input en array de mot (dans l'ordre)
                let inputArray = document.getElementById('topic_title').value.split(" ");

                // Si aucun mot censuré (display none du warning) marche
                const noneCensored = inputArray.every(element => !censuresArray.includes(element.toLowerCase()) || element.startsWith('\\') );
                console.log('TEST input ARRAY: ' + inputArray);
                console.log('TEST censore ARRAY: ' + censuresArray);
                if (noneCensored) {
                    console.log('proc display:none');
                    document.getElementById('vulgarityTopicWarning').style.display = "none";
                }
                else {
                    document.getElementById('vulgarityTopicWarning').style.display = "block";
                }
            })

            // A chaque input, check si il y a vulgarité et censorise
            document.getElementById('media_title').addEventListener('input', function() {
            
                // Découpe de l'input en array de mot (dans l'ordre)
                let inputArray = document.getElementById('media_title').value.split(" ");

                // Si aucun mot censuré (display none du warning)
                const noneCensored = inputArray.every(element => !censuresArray.includes(element.toLowerCase()) || element.startsWith('\\') );
                console.log('TEST input ARRAY: ' + inputArray);
                console.log('TEST censore ARRAY: ' + censuresArray);
                if (noneCensored) {
                    console.log('proc display:none');
                    document.getElementById('vulgarityMediaWarning').style.display = "none";
                }
                else {
                    document.getElementById('vulgarityMediaWarning').style.display = "block";
                }
            })


        </script>




    </div>

    <script>
        window.onload = function() {

            // document.querySelector('#logoPng').src = '{{ asset('img/logoSquadForge_White_Rogned.png') }}';
            document.getElementById('authenticationDiv').style.color = "white";

        }
    </script>

{% endblock %}
