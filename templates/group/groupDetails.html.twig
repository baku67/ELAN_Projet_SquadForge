{% extends 'base.html.twig' %}

{% block title %}Topics{% endblock %}

{% block body %}


    <header class="gameHeader" style="background: url('{{ asset('img/games/banner/' ~ gameFrom.banner ) }}' )">
        <a href="{{ path('app_home') }}"><img src="{{ asset('img/logoSquadForge_White_Rogned.png') }}" class="logoPng" id="logoPng" /></a>
        <nav>
            <a href="{{ path('app_games') }}" style="color:{{ gameFrom.fontColor }};">Jeux</a>
            {% if app.user %}
                <a href="{{ path('app_userGroups') }}" style="color:{{ gameFrom.fontColor }};">TEAMS</a>
            {% endif %}
            {% if app.user and "ROLE_MODO" in app.user.roles %}
                <a href="{{ path('app_moderationDashboard') }}" style="color:{{ gameFrom.fontColor }};">Modération</a>
            {% endif %}
        </nav>
        <a href="{{ path('app_game', {'id': gameFrom.id }) }}"><h2 class="headerGameTitle"  style="border-right:15px solid {{ gameFrom.color }};">{{ gameFrom.title }}</h2></a>
    </header>
    <div class="headerUnderline" style="background-color: {{ gameFrom.color }}"></div>


    <div class="main">

        {# Fil d'Ariane #}
        <p>
            <a class="underlineLink" href="{{ path('app_games') }}">Jeux</a>
             - <a class="underlineLink" href="{{ path('app_game', {'id': gameFrom.id }) }}">{{ gameFrom.title }}</a>
             - <a class="underlineLink" href="{{ path('app_groupList', {'gameIdFrom': gameFrom.id }) }}">Teams</a>
             - {{ group.title }}
        </p>

        <h2>TEAMS</h2>

        <br>
        <h3 style="text-align:center; width:100%;">{{ group.title }}</h3>

        <p class="groupDescription">
            <i class="fa-solid fa-quote-left"></i>
            <span style="font-family:'K2D', sans-serif;">{{ group.description|capitalize }}</span>
            <i class="fa-solid fa-quote-right"></i>
        </p>
        <p class="groupLeader">Leader: <span>{{ group.leader.pseudo }}</span></p>

        {# Liste des membres du groupe #}
        <div>
            <div class="gameInfosSubTitleBg" style="background-color: {{ gameFrom.color }}"></div>
            <h3 class="gameSubTitle noMarginBottom">Membres ( {{ group.members|length }} / {{ group.nbrPlaces }} )</h3>
        </div>

        <ul id="membersList" class="membersList">

        {# Card Leader (position 1) #}
        {% if group.leader == app.user %}
            {% set leaderPseudo = "Vous" %}
        {% else %}
            {% set leaderPseudo = group.leader.pseudo %}
        {% endif %}

        <li class="memberCard leaderCard" style="background-color: {{ gameFrom.color }}">
            {{ leaderPseudo }}
        </li>
        

        {% for member in members %}

            {% if member != group.leader %}
            
                {# Leader Card #}
                {% if member == app.user %}
                    {% set memberPseudo = "Vous" %}
                {% else %}
                    {% set memberPseudo = member.pseudo %}
                {% endif %}
                
                <li class="memberCard" style="background-color: {{ gameFrom.color }}">{{ memberPseudo }}
                {% if app.user == group.leader and app.user != member %}    
                    <a href="{{ path('app_kickGroupMember',{'memberId': member.id, 'groupId': group.id}) }}">Expulser</a>        
                {% endif %}
                </li>
            
            {% endif %}
            
                
        {% endfor %}
        </ul>

        {# Emplacements de membre vides #}
        <span id="nbrPlacesGroup" hidden>{{ group.nbrPlaces }}</span>
        <span id="groupColor" hidden>{{ gameFrom.color }}</span>
        <script>
            window.onload = function() {
                var nbrPlaces = parseInt(document.getElementById("nbrPlacesGroup").textContent);
                var membresCount = document.getElementById("membersList").childElementCount;

                for (let index = 0; index < (nbrPlaces - membresCount); index++) {
                    var voidMember = document.createElement("li");
                    voidMember.className = "voidMember";
                    voidMember.innerHTML = "+";
                    voidMember.style.backgroundColor = document.getElementById("groupColor").innerText;

                    document.getElementById("membersList").append(voidMember);
                }
            }
        </script>

        <br><br>

        {% if app.user in group.members %}

            {% if group.leader == app.user %}

                <p>Leader</p>

                <span id="groupId" hidden>{{ group.id }}</span>
                {# Toggle Visibilité du group #}
                {% if group.status == "public" %}
                    {% set visibilityState = "checked" %}
                {% else %}
                    {% set visibilityState = "" %}
                {% endif %}

                {% if group.restriction18 %}
                    {% set restriction18State = "checked" %}
                {% else %}
                    {% set restriction18State = "" %}
                {% endif %}

                {% if group.restrictionMic %}
                    {% set restrictionMicState = "checked" %}
                {% else %}
                    {% set restrictionMicState = "" %}
                {% endif %}

                {% if group.restrictionImgProof %}
                    {% set restrictionImgProofState = "checked" %}
                {% else %}
                    {% set restrictionImgProofState = "" %}
                {% endif %}

                <div>
                    <div class="gameInfosSubTitleBg" style="background-color: {{ gameFrom.color }}"></div>
                    <h3 class="gameSubTitle noMarginBottom">Paramètres</h3>
                </div>
                {# Leader: Passer le lead #}
                <div style="display:inline-flex; width:100%;">
                    <p style="width:auto;">Passer le lead</p>
                    <form id="switchTeamLeader" action="{{ path('app_switchTeamLeader',{ 'groupId':group.id }) }}" method="post" style="display:inline-flex;">
                        <select id="memberLeadSelect" class="form-select" name="memberId" style="font-family: 'K2D', sans serif;">
                            <option id="voidSelect" value="">-- Choisir</option>
                            {% for member in group.members %}
                                {% if member != app.user %}
                                    <option value="{{member.id}}">{{member.pseudo}}</option>
                                {% endif %}
                            {% endfor %}
                        </select>
                        <input id="memberLeadSubmit" type="submit" value="Valider" class="btn btn-primary" style="background-color:{{ gameFrom.color }}" disabled> 
                    </form>
                </div>

                <script>    
                    document.getElementById("memberLeadSelect").addEventListener("change", function() {
                        if (document.getElementById("voidSelect").selected) {
                            document.getElementById("memberLeadSubmit").disabled = true;
                        }
                        else {
                            document.getElementById("memberLeadSubmit").disabled = false;
                        }
                    })

                </script>

                <br>

                <div style="display:flex; flex-direction:column;">

                    {# Asynch toggleGroupVisibility #}
                    <div style="display:inline-flex;">
                        <p>Visibilité: </p>
                        <form id="toggleGroupVisibilityForm" action="{{ path('app_toggleGroupVisibility',{ 'groupId':group.id }) }}" method="post">
                            <label class="toggleAutoPlay">
                                <input type="checkbox" {{ visibilityState }} name="autoPlay" id="toggleVisi">
                                <span class="slider"></span>
                            </label>
                        </form>
                    </div>

                    <script>
                        document.getElementById('toggleGroupVisibilityForm').addEventListener('change', function(event) {
                            
                            event.preventDefault(); // Empêche la soumission normale du formulaire

                            const groupId = parseInt(document.getElementById("groupId").textContent);
                            fetch('/toggleGroupVisibility/' + groupId, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }})
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    document.querySelector('#ajaxFlash').textContent = data.newState;
                                    document.querySelector('#ajaxFlash').classList.add("ajaxFlashAnim", "successAjaxFlash");
                                    
                                } else {
                                    document.querySelector('#ajaxFlash').textContent = "Vous devez être le leader du groupe pour changer sa visibilité";
                                    document.querySelector('#ajaxFlash').classList.add("ajaxFlashAnim", "errorAjaxFlash");
                                }
                            });
                        });
                    </script>

                    {# Asynch toggleRestriction18 #}
                    <div style="display:inline-flex;">
                        <p>Majorité obligatoire: </p>
                        <form id="toggleGroupRestriction18Form" action="{{ path('app_toggleGroupRestriction18',{ 'groupId':group.id }) }}" method="post">
                            <label class="toggleAutoPlay">
                                <input type="checkbox" {{ restriction18State }} name="autoPlay" id="toggleVisi">
                                <span class="slider"></span>
                            </label>
                        </form>
                    </div>

                    <script>
                        document.getElementById('toggleGroupRestriction18Form').addEventListener('change', function(event) {
                            
                            event.preventDefault(); // Empêche la soumission normale du formulaire

                            const groupId = parseInt(document.getElementById("groupId").textContent);
                            fetch('/toggleGroupRestriction18/' + groupId, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }})
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    document.querySelector('#ajaxFlash').textContent = data.newState;
                                    document.querySelector('#ajaxFlash').classList.add("ajaxFlashAnim", "successAjaxFlash");
                                } else {
                                    document.querySelector('#ajaxFlash').textContent = "Vous devez être le leader du groupe pour changer ce critère";
                                    document.querySelector('#ajaxFlash').classList.add("ajaxFlashAnim", "errorAjaxFlash");
                                }
                            });
                        });
                    </script>

                    {# Asynch toggleRestrictionMic #}
                    <div style="display:inline-flex;">
                        <p>Micro obligatoire: </p>
                        <form id="toggleGroupRestrictionMicForm" action="{{ path('app_toggleGroupRestrictionMic',{ 'groupId':group.id }) }}" method="post">
                            <label class="toggleAutoPlay">
                                <input type="checkbox" {{ restrictionMicState }} name="autoPlay" id="toggleVisi">
                                <span class="slider"></span>
                            </label>
                        </form>
                    </div>

                    <script>
                        document.getElementById('toggleGroupRestrictionMicForm').addEventListener('change', function(event) {
                            
                            event.preventDefault(); // Empêche la soumission normale du formulaire

                            const groupId = parseInt(document.getElementById("groupId").textContent);
                            fetch('/toggleGroupRestrictionMic/' + groupId, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }})
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    document.querySelector('#ajaxFlash').textContent = data.newState;
                                    document.querySelector('#ajaxFlash').classList.add("ajaxFlashAnim", "successAjaxFlash");
                                } else {
                                    document.querySelector('#ajaxFlash').textContent = "Vous devez être le leader du groupe pour changer ce critère";
                                    document.querySelector('#ajaxFlash').classList.add("ajaxFlashAnim", "errorAjaxFlash");
                                }
                            });
                        });
                    </script>

                    {# Asynch toggleRestrictionImgProof (Autoriser l'upload d'une image pour prouver un Lvl par exemple, à accompagner d'une description du screen attendu) #}
                    <div style="display:inline-flex;">
                        <p>Autoriser pièce jointe: </p>
                        <form id="toggleRestrictionImgProof" action="{{ path('app_toggleRestrictionImgProof',{ 'groupId':group.id }) }}" method="post">
                            <label class="toggleAutoPlay">
                                <input type="checkbox" {{ restrictionImgProofState }} name="autoPlay" id="toggleVisi">
                                <span class="slider"></span>
                            </label>
                        </form>
                    </div>

                    <script>
                        document.getElementById('toggleRestrictionImgProof').addEventListener('change', function(event) {
                            
                            event.preventDefault(); // Empêche la soumission normale du formulaire

                            const groupId = parseInt(document.getElementById("groupId").textContent);
                            fetch('/toggleRestrictionImgProof/' + groupId, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }})
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    document.querySelector('#ajaxFlash').textContent = data.newState;
                                    document.querySelector('#ajaxFlash').classList.add("ajaxFlashAnim", "successAjaxFlash");
                                } else {
                                    document.querySelector('#ajaxFlash').textContent = "Vous devez être le leader du groupe pour changer ce critère";
                                    document.querySelector('#ajaxFlash').classList.add("ajaxFlashAnim", "errorAjaxFlash");
                                }
                            });
                        });
                    </script>

                </div>

                {# Customisation des candidature #}
                <div>
                    <div class="gameInfosSubTitleBg" style="background-color: {{ gameFrom.color }}"></div>
                    <h3 class="gameSubTitle noMarginBottom">Candidature</h3>
                </div>

                {% if candidatureCount == 0 %}
                    <span class="candidaturesListBtn" style="border-color: grey; opacity:0.7; border-width:1px; cursor:default;">En attente ({{ candidatureCount }})</span>
                {% else %}
                    <a href="{{ path('app_candidatureList',{'groupId':group.id}) }}" class="candidaturesListBtn" style="border-color: {{ gameFrom.color }}", onmouseover="this.style.backgroundColor = '{{ gameFrom.color }}';" onmouseout="this.style.backgroundColor = 'rgba(0,0,0,0)';">En attente ({{ candidatureCount }})</a>
                {% endif %}
                
                <h5>Message de l'offre</h5>
                <p style="font-family:'K2D';">{{ group.candidatureDescription|capitalize }}</p>

                <h5>Questions posés</h5> 
                {# Liste des questions #}
                <div class="questionsContainer">
                {% for question in questions %}
                    <div class="questionLineList">
                        <div style="display:inline-flex; line-height:0;">
                            <p>{{ question.text }}</p>
                            {% if question.required %}
                                <span class="requiredStar"><i class="fa-solid fa-star-of-life"></i></span>
                            {% endif %}
                        </div>
                        <a class="deleteQuestion" href="{{ path('app_deleteGroupQuestion',{'groupId': group.id, 'questionId': question.id}) }}" class="deleteQuestionBtn"><i class="fa-solid fa-trash"></i></a>
                    </div>
                {% endfor %}
                </div>

                {# Ajouter une question #}                
                <form id="questionsContainer" action="{{ path('app_addGroupQuestion',{'groupId': group.id}) }}" method="post">
                    <div class="inputQuestionLine">
                        <input type="text" id="questionText" name="questionText" placeholder="Entrez une quesion de candidature..." class="form-control"></input>
                        <label for="required">requis:</label>
                        <input type="checkbox" name="required" value="checked" class="questionRequired form-check-input"></input>
                    </div>
                    <input type="submit" class="btn btn-primary" value="Ajouter"></input>
                </form>
                

            {% else %}

                <p>Membre Standard</p>

            {% endif %}

            <a id="leaveGroupBtn" href="{{ path('app_leaveGroup', {'groupId': group.id} )}}">Quitter le groupe</a>
            
        {% else %}

            {# si candidature en attente #}
            {% if waitingCandidature is not null and waitingCandidature %}
                <span>Candidature en attente</span>
                {# Récup l'id de la candidature (findBy User/group + getOneResult) #}
                <a href="{{ path('app_cancelCandidature',{'candidatureId':candidature.id}) }}">Annuler</a>
            {% else %}
                {% if app.user in group.blacklistedUsers %}
                    <span style="color: grey;">Candidater</span>
                    <br>
                    <span class="emptyListMsg">(Vous ne pouvez plus candidater)</span>
                {% else %}   
                    <a href="{{ path('app_showCandidatureForm',{'groupId': group.id}) }}">Candidater</p>
                {% endif %}
            {% endif %}

        {% endif %}
        


    </div>


{% endblock %}